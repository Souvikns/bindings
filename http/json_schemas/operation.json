{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "http://asyncapi.com/bindings/http/operation.json",
  "title": "Operation Schema",
  "description": "This object contains information about the operation representation in HTTP.",
  "type": "object",
  "additionalProperties": false,
  "patternProperties": {
    "^x-[\\w\\d\\.\\-\\_]+$": {
      "$ref": "https://raw.githubusercontent.com/asyncapi/asyncapi-node/v2.7.7/schemas/2.0.0.json#/definitions/specificationExtension"
    },
    "^(GET|POST|PUT|PATCH|DELETE|OPTIONS|HEAD|TRACE)": {
      "type": "object",
      "properties": {
        "query": {
          "$ref": "https://raw.githubusercontent.com/asyncapi/asyncapi-node/v2.7.7/schemas/2.0.0.json#/definitions/schema",
          "description": "A Schema object containing the definitions for each query parameter. This schema MUST be of type 'object' and have a properties key."
        },
        "requestBody": {
          "$ref": "https://raw.githubusercontent.com/asyncapi/asyncapi-node/v2.7.7/schemas/2.0.0.json#/definitions/schema",
          "description": "A Schema object containing definitions for each request body parameters."
        },
        "response": {
          "$ref": "https://raw.githubusercontent.com/asyncapi/asyncapi-node/v2.7.7/schemas/2.0.0.json#/definitions/schema",
          "description": "A Schema object containing the definitions for each response parameter."
        }
      }
    }
  },
  "properties": {
    "bindingVersion": {
      "type": "string",
      "enum": [
        "0.1.0"
      ],
      "description": "The version of this binding. If omitted, 'latest' MUST be assumed."
    }
  },
  "examples": [
    {
      "GET": {
        "query": {
          "type": "object",
          "properties": {
            "userId": {
              "type": "string"
            }
          }
        },
        "response": {
          "type": "object",
          "properties": {
            "userId": {
              "type": "string"
            },
            "userName": {
              "type": "string"
            }
          }
        }
      },
      "POST": {
        "requestBody": {
          "type": "object",
          "properties": {
            "userName": {
              "type": "string"
            }
          }
        },
        "response": {
          "type": "object",
          "properties": {
            "userId": {
              "type": "string"
            }
          }
        }
      }
    }
  ]
}